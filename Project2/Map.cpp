#include "Map.h"
#include "TextureManager.h"
#include "GameObject.h"


int lvl1[26][25] = {



	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{2,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2},
	{2,0,0,2,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,2,0,0,2},
	{2,0,0,2,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,2,0,0,2},
	{2,0,0,2,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2,0,0,2},
	{2,0,0,2,0,0,2,2,2,2,0,0,2,0,0,2,2,2,2,0,0,2,0,0,2},
	{2,0,0,0,0,1,2,1,1,1,1,1,1,0,0,0,0,0,2,0,0,0,0,0,2},
	{2,0,0,0,0,0,2,1,1,1,1,1,0,0,0,0,0,0,2,0,0,0,0,0,2},
	{2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2},
	{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
	{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2},
	{2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2,0,0,2},
	{2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2},
	{2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2},
	{2,0,0,2,0,0,2,2,2,2,0,0,2,0,0,2,2,2,2,0,0,2,0,0,2},
	{2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,0,2},
	{2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,0,0,2},
	{2,0,0,2,2,2,2,0,0,2,0,0,2,0,0,2,0,0,2,2,2,2,0,0,2},
	{2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,2},
	{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};


Map::Map()
{
	wall = TextureManager::LoadTexture("C:\\Users\\stast\\Desktop\\programming\\C++\\kursovik\\DEV\\test\\Project2\\assets\\wall1.bmp");
	
	abyss = TextureManager::LoadTexture("C:\\Users\\stast\\Desktop\\programming\\C++\\kursovik\\DEV\\test\\Project2\\assets\\void.bmp");

	LoadMap(lvl1);

	src.x = src.y = 0;
	src.w = dest.w = 32;
	src.h = dest.h = 32;
	dest.x = dest.y = 0;


}



void Map::LoadMap(int arr[26][25])
{
	for (int row = 0; row < 26; row++)
	{
		for (int column = 0; column < 25; column++)
		{
			map[row][column] = arr[row][column];
		}
	}
}


void Map::DrawMap()
{
	int type = 0;
	for (int row = 0; row < 26; row++)
	{
		for (int column = 0; column < 25; column++)
		{
			type = map[row][column];

			dest.x = column * 32;
			dest.y = row * 32;

			switch (type)
			{
			case 0:
				TextureManager::Draw(abyss, src, dest);
				
				break;
			case 1:
				TextureManager::Draw(abyss, src, dest);

				break;
			case 2:
				TextureManager::Draw(wall, src, dest);
				
				break;
			default:
				break;
			}
		}
	}

}



int Map::Get(int i, int j)
{
	return map[i][j];
}

